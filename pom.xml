<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>ru.amai.highload</groupId>
  <artifactId>otus-highload</artifactId>
  <version>0.0.1</version>
  <packaging>pom</packaging>

  <developers>
    <developer>
      <name>Sergey Lobanov</name>
      <email>s.y.lobanov@yandex.ru</email>
    </developer>
  </developers>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.6.3</version>
    <relativePath/>
  </parent>

  <properties>
    <java.version>11</java.version>
    <kotlin.version>1.6.10</kotlin.version>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!-- plugin version -->
    <detekt.version>1.19.0</detekt.version>
    <dockerfile.maven.plugin.verion>0.33.0</dockerfile.maven.plugin.verion>
    <jacoco.version>0.8.7</jacoco.version>

    <!-- dependencies versions -->
    <spring-cloud.version>2021.0.0</spring-cloud.version>
    <logstash-logback-encoder.version>6.3</logstash-logback-encoder.version>
    <kotlin-logging.version>1.7.9</kotlin-logging.version>
    <mockk.version>1.9.3</mockk.version>
    <kotest.version>5.1.0</kotest.version>

    <!-- sonar -->
    <sonar.organization>slobanov-github</sonar.organization>
    <sonar.host.url>https://sonarcloud.io</sonar.host.url>
    <sonar.login>${env.SONAR_TOKEN}</sonar.login>
    <sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
    <sonar.jacoco.reportPath>${project.basedir}/../target/jacoco.exec</sonar.jacoco.reportPath>
    <sonar.language>kotlin</sonar.language>

    <!-- docker -->
    <docker.repository.org>otushighload202003slobanov</docker.repository.org>
  </properties>

  <modules>
    <module>social-network</module>
  </modules>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>net.logstash.logback</groupId>
        <artifactId>logstash-logback-encoder</artifactId>
        <version>${logstash-logback-encoder.version}</version>
      </dependency>
      <dependency>
        <groupId>io.github.microutils</groupId>
        <artifactId>kotlin-logging</artifactId>
        <version>${kotlin-logging.version}</version>
      </dependency>

      <!-- test -->
      <dependency>
        <groupId>io.mockk</groupId>
        <artifactId>mockk</artifactId>
        <version>${mockk.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.kotest</groupId>
        <artifactId>kotest-runner-junit5-jvm</artifactId>
        <version>${kotest.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.kotest</groupId>
        <artifactId>kotest-assertions-core-jvm</artifactId>
        <version>${kotest.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.kotest</groupId>
        <artifactId>kotest-property-jvm</artifactId>
        <version>${kotest.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
    <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.jetbrains.kotlin</groupId>
          <artifactId>kotlin-maven-plugin</artifactId>
          <configuration>
            <args>
              <arg>-Xjsr305=strict</arg>
            </args>
            <compilerPlugins>
              <plugin>spring</plugin>
            </compilerPlugins>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.jetbrains.kotlin</groupId>
              <artifactId>kotlin-maven-allopen</artifactId>
              <version>${kotlin.version}</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <id>compile</id>
              <phase>compile</phase>
              <goals>
                <goal>compile</goal>
              </goals>
            </execution>
            <execution>
              <id>test-compile</id>
              <phase>test-compile</phase>
              <goals>
                <goal>test-compile</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>com.github.ozsie</groupId>
          <artifactId>detekt-maven-plugin</artifactId>
          <version>${detekt.version}</version>
          <configuration>
            <config>detekt-config.yml</config>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>io.gitlab.arturbosch.detekt</groupId>
              <artifactId>detekt-formatting</artifactId>
              <version>${detekt.version}</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <phase>verify</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>io.fabric8</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>${dockerfile.maven.plugin.verion}</version>
          <configuration>
            <authConfig>
              <username>${env.DOCKER_USERNAME}</username>
              <password>${env.DOCKER_PASSWORD}</password>
            </authConfig>
          </configuration>
          <executions>
            <execution>
              <id>docker-build</id>
              <phase>install</phase>
              <goals>
                <goal>build</goal>
              </goals>
            </execution>
            <execution>
              <id>docker-push</id>
              <phase>deploy</phase>
              <goals>
                <goal>push</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco.version}</version>
          <configuration>
            <append>true</append>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
            <execution>
              <id>post-unit-test</id>
              <phase>test</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

</project>
